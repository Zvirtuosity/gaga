// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/stream.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StreamFrameType int32

const (
	StreamFrameType_Message StreamFrameType = 0
	StreamFrameType_Kick    StreamFrameType = 1
	StreamFrameType_Ping    StreamFrameType = 2
)

var StreamFrameType_name = map[int32]string{
	0: "Message",
	1: "Kick",
	2: "Ping",
}
var StreamFrameType_value = map[string]int32{
	"Message": 0,
	"Kick":    1,
	"Ping":    2,
}

func (x StreamFrameType) String() string {
	return proto.EnumName(StreamFrameType_name, int32(x))
}
func (StreamFrameType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_stream_81626ac05c3da03e, []int{0}
}

type StreamFrame struct {
	Type                 StreamFrameType `protobuf:"varint,1,opt,name=Type,proto3,enum=pb.StreamFrameType" json:"Type,omitempty"`
	Codec                string          `protobuf:"bytes,2,opt,name=Codec,proto3" json:"Codec,omitempty"`
	MsgId                int32           `protobuf:"varint,3,opt,name=MsgId,proto3" json:"MsgId,omitempty"`
	MsgData              []byte          `protobuf:"bytes,4,opt,name=MsgData,proto3" json:"MsgData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StreamFrame) Reset()         { *m = StreamFrame{} }
func (m *StreamFrame) String() string { return proto.CompactTextString(m) }
func (*StreamFrame) ProtoMessage()    {}
func (*StreamFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_81626ac05c3da03e, []int{0}
}
func (m *StreamFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamFrame.Unmarshal(m, b)
}
func (m *StreamFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamFrame.Marshal(b, m, deterministic)
}
func (dst *StreamFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamFrame.Merge(dst, src)
}
func (m *StreamFrame) XXX_Size() int {
	return xxx_messageInfo_StreamFrame.Size(m)
}
func (m *StreamFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamFrame.DiscardUnknown(m)
}

var xxx_messageInfo_StreamFrame proto.InternalMessageInfo

func (m *StreamFrame) GetType() StreamFrameType {
	if m != nil {
		return m.Type
	}
	return StreamFrameType_Message
}

func (m *StreamFrame) GetCodec() string {
	if m != nil {
		return m.Codec
	}
	return ""
}

func (m *StreamFrame) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *StreamFrame) GetMsgData() []byte {
	if m != nil {
		return m.MsgData
	}
	return nil
}

type PostParam struct {
	MsgId                int32    `protobuf:"varint,1,opt,name=MsgId,proto3" json:"MsgId,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostParam) Reset()         { *m = PostParam{} }
func (m *PostParam) String() string { return proto.CompactTextString(m) }
func (*PostParam) ProtoMessage()    {}
func (*PostParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_81626ac05c3da03e, []int{1}
}
func (m *PostParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostParam.Unmarshal(m, b)
}
func (m *PostParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostParam.Marshal(b, m, deterministic)
}
func (dst *PostParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostParam.Merge(dst, src)
}
func (m *PostParam) XXX_Size() int {
	return xxx_messageInfo_PostParam.Size(m)
}
func (m *PostParam) XXX_DiscardUnknown() {
	xxx_messageInfo_PostParam.DiscardUnknown(m)
}

var xxx_messageInfo_PostParam proto.InternalMessageInfo

func (m *PostParam) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *PostParam) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type PostRet struct {
	MsgId                int32    `protobuf:"varint,1,opt,name=MsgId,proto3" json:"MsgId,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostRet) Reset()         { *m = PostRet{} }
func (m *PostRet) String() string { return proto.CompactTextString(m) }
func (*PostRet) ProtoMessage()    {}
func (*PostRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_81626ac05c3da03e, []int{2}
}
func (m *PostRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostRet.Unmarshal(m, b)
}
func (m *PostRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostRet.Marshal(b, m, deterministic)
}
func (dst *PostRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostRet.Merge(dst, src)
}
func (m *PostRet) XXX_Size() int {
	return xxx_messageInfo_PostRet.Size(m)
}
func (m *PostRet) XXX_DiscardUnknown() {
	xxx_messageInfo_PostRet.DiscardUnknown(m)
}

var xxx_messageInfo_PostRet proto.InternalMessageInfo

func (m *PostRet) GetMsgId() int32 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *PostRet) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*StreamFrame)(nil), "pb.StreamFrame")
	proto.RegisterType((*PostParam)(nil), "pb.PostParam")
	proto.RegisterType((*PostRet)(nil), "pb.PostRet")
	proto.RegisterEnum("pb.StreamFrameType", StreamFrameType_name, StreamFrameType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StreamClient is the client API for Stream service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StreamClient interface {
	CreateStream(ctx context.Context, opts ...grpc.CallOption) (Stream_CreateStreamClient, error)
}

type streamClient struct {
	cc *grpc.ClientConn
}

func NewStreamClient(cc *grpc.ClientConn) StreamClient {
	return &streamClient{cc}
}

func (c *streamClient) CreateStream(ctx context.Context, opts ...grpc.CallOption) (Stream_CreateStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Stream_serviceDesc.Streams[0], "/pb.Stream/CreateStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &streamCreateStreamClient{stream}
	return x, nil
}

type Stream_CreateStreamClient interface {
	Send(*StreamFrame) error
	Recv() (*StreamFrame, error)
	grpc.ClientStream
}

type streamCreateStreamClient struct {
	grpc.ClientStream
}

func (x *streamCreateStreamClient) Send(m *StreamFrame) error {
	return x.ClientStream.SendMsg(m)
}

func (x *streamCreateStreamClient) Recv() (*StreamFrame, error) {
	m := new(StreamFrame)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StreamServer is the server API for Stream service.
type StreamServer interface {
	CreateStream(Stream_CreateStreamServer) error
}

func RegisterStreamServer(s *grpc.Server, srv StreamServer) {
	s.RegisterService(&_Stream_serviceDesc, srv)
}

func _Stream_CreateStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(StreamServer).CreateStream(&streamCreateStreamServer{stream})
}

type Stream_CreateStreamServer interface {
	Send(*StreamFrame) error
	Recv() (*StreamFrame, error)
	grpc.ServerStream
}

type streamCreateStreamServer struct {
	grpc.ServerStream
}

func (x *streamCreateStreamServer) Send(m *StreamFrame) error {
	return x.ServerStream.SendMsg(m)
}

func (x *streamCreateStreamServer) Recv() (*StreamFrame, error) {
	m := new(StreamFrame)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Stream_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Stream",
	HandlerType: (*StreamServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "CreateStream",
			Handler:       _Stream_CreateStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "pb/stream.proto",
}

func init() { proto.RegisterFile("pb/stream.proto", fileDescriptor_stream_81626ac05c3da03e) }

var fileDescriptor_stream_81626ac05c3da03e = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0xf7, 0x6a, 0xb7, 0xba, 0xb7, 0x61, 0x4b, 0xf4, 0x10, 0x3c, 0x95, 0x5e, 0x0c, 0x1e,
	0xaa, 0x74, 0xe8, 0x59, 0x98, 0x08, 0x22, 0x85, 0x12, 0xfd, 0x07, 0xd2, 0xed, 0x51, 0x86, 0xd4,
	0x86, 0x24, 0x17, 0xc1, 0x3f, 0x5e, 0x92, 0x2a, 0x8e, 0x9e, 0xbc, 0xbd, 0xdf, 0xf7, 0xe5, 0x77,
	0xc8, 0x87, 0xa9, 0x6e, 0x6f, 0xac, 0x33, 0xa4, 0xfa, 0x52, 0x9b, 0xc1, 0x0d, 0x2c, 0xd2, 0x6d,
	0xf1, 0x85, 0xab, 0xd7, 0x90, 0x3d, 0x19, 0xd5, 0x13, 0xbb, 0xc2, 0xf8, 0xed, 0x53, 0x13, 0x87,
	0x1c, 0xc4, 0x59, 0x75, 0x5e, 0xea, 0xb6, 0x3c, 0xaa, 0x7d, 0x25, 0xc3, 0x03, 0x76, 0x81, 0xf3,
	0xed, 0xb0, 0xa7, 0x1d, 0x8f, 0x72, 0x10, 0x4b, 0x39, 0x82, 0x4f, 0x6b, 0xdb, 0x3d, 0xef, 0xf9,
	0x49, 0x0e, 0x62, 0x2e, 0x47, 0x60, 0x1c, 0x93, 0xda, 0x76, 0x8f, 0xca, 0x29, 0x1e, 0xe7, 0x20,
	0xd6, 0xf2, 0x17, 0x8b, 0x3b, 0x5c, 0x36, 0x83, 0x75, 0x8d, 0x32, 0xaa, 0xff, 0x93, 0xe1, 0x58,
	0x66, 0x18, 0x07, 0x33, 0x0a, 0x66, 0xb8, 0x8b, 0x0d, 0x26, 0x5e, 0x93, 0xe4, 0xfe, 0x2f, 0x5d,
	0x57, 0x98, 0x4e, 0xbe, 0xc2, 0x56, 0x98, 0xd4, 0x64, 0xad, 0xea, 0x28, 0x9b, 0xb1, 0x53, 0x8c,
	0x5f, 0x0e, 0xbb, 0xf7, 0x0c, 0xfc, 0xd5, 0x1c, 0x3e, 0xba, 0x2c, 0xaa, 0x1e, 0x70, 0x31, 0x3a,
	0xec, 0x1e, 0xd7, 0x5b, 0x43, 0xca, 0xd1, 0x0f, 0xa7, 0x93, 0x69, 0x2e, 0xa7, 0x41, 0x31, 0x13,
	0x70, 0x0b, 0xed, 0x22, 0x4c, 0xbd, 0xf9, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x5f, 0xf5, 0xa6, 0x26,
	0x7d, 0x01, 0x00, 0x00,
}
