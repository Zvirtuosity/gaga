// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/gate/gate_rpc.proto

package gate

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LoginParam struct {
	K                    string   `protobuf:"bytes,1,opt,name=k,proto3" json:"k,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginParam) Reset()         { *m = LoginParam{} }
func (m *LoginParam) String() string { return proto.CompactTextString(m) }
func (*LoginParam) ProtoMessage()    {}
func (*LoginParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_gate_rpc_245e6d529bac706a, []int{0}
}
func (m *LoginParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginParam.Unmarshal(m, b)
}
func (m *LoginParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginParam.Marshal(b, m, deterministic)
}
func (dst *LoginParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginParam.Merge(dst, src)
}
func (m *LoginParam) XXX_Size() int {
	return xxx_messageInfo_LoginParam.Size(m)
}
func (m *LoginParam) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginParam.DiscardUnknown(m)
}

var xxx_messageInfo_LoginParam proto.InternalMessageInfo

func (m *LoginParam) GetK() string {
	if m != nil {
		return m.K
	}
	return ""
}

type LoginRet struct {
	Err                  string   `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	K                    string   `protobuf:"bytes,2,opt,name=k,proto3" json:"k,omitempty"`
	V                    string   `protobuf:"bytes,3,opt,name=v,proto3" json:"v,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRet) Reset()         { *m = LoginRet{} }
func (m *LoginRet) String() string { return proto.CompactTextString(m) }
func (*LoginRet) ProtoMessage()    {}
func (*LoginRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_gate_rpc_245e6d529bac706a, []int{1}
}
func (m *LoginRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRet.Unmarshal(m, b)
}
func (m *LoginRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRet.Marshal(b, m, deterministic)
}
func (dst *LoginRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRet.Merge(dst, src)
}
func (m *LoginRet) XXX_Size() int {
	return xxx_messageInfo_LoginRet.Size(m)
}
func (m *LoginRet) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRet.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRet proto.InternalMessageInfo

func (m *LoginRet) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *LoginRet) GetK() string {
	if m != nil {
		return m.K
	}
	return ""
}

func (m *LoginRet) GetV() string {
	if m != nil {
		return m.V
	}
	return ""
}

func init() {
	proto.RegisterType((*LoginParam)(nil), "gate.LoginParam")
	proto.RegisterType((*LoginRet)(nil), "gate.LoginRet")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GateClient is the client API for Gate service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GateClient interface {
	Login(ctx context.Context, in *LoginParam, opts ...grpc.CallOption) (*LoginRet, error)
}

type gateClient struct {
	cc *grpc.ClientConn
}

func NewGateClient(cc *grpc.ClientConn) GateClient {
	return &gateClient{cc}
}

func (c *gateClient) Login(ctx context.Context, in *LoginParam, opts ...grpc.CallOption) (*LoginRet, error) {
	out := new(LoginRet)
	err := c.cc.Invoke(ctx, "/gate.Gate/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GateServer is the server API for Gate service.
type GateServer interface {
	Login(context.Context, *LoginParam) (*LoginRet, error)
}

func RegisterGateServer(s *grpc.Server, srv GateServer) {
	s.RegisterService(&_Gate_serviceDesc, srv)
}

func _Gate_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GateServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gate.Gate/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GateServer).Login(ctx, req.(*LoginParam))
	}
	return interceptor(ctx, in, info, handler)
}

var _Gate_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gate.Gate",
	HandlerType: (*GateServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Gate_Login_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/gate/gate_rpc.proto",
}

func init() { proto.RegisterFile("pb/gate/gate_rpc.proto", fileDescriptor_gate_rpc_245e6d529bac706a) }

var fileDescriptor_gate_rpc_245e6d529bac706a = []byte{
	// 145 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2b, 0x48, 0xd2, 0x4f,
	0x4f, 0x2c, 0x49, 0x05, 0x13, 0xf1, 0x45, 0x05, 0xc9, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42,
	0x2c, 0x20, 0xbe, 0x92, 0x14, 0x17, 0x97, 0x4f, 0x7e, 0x7a, 0x66, 0x5e, 0x40, 0x62, 0x51, 0x62,
	0xae, 0x10, 0x0f, 0x17, 0x63, 0xb6, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x63, 0xb6, 0x92,
	0x05, 0x17, 0x07, 0x58, 0x2e, 0x28, 0xb5, 0x44, 0x48, 0x80, 0x8b, 0x39, 0xb5, 0xa8, 0x08, 0x2a,
	0x07, 0x62, 0x42, 0xd4, 0x32, 0x41, 0xd5, 0x82, 0x78, 0x65, 0x12, 0xcc, 0x10, 0x5e, 0x99, 0x91,
	0x31, 0x17, 0x8b, 0x7b, 0x62, 0x49, 0xaa, 0x90, 0x36, 0x17, 0x2b, 0xd8, 0x04, 0x21, 0x01, 0x3d,
	0x90, 0x6d, 0x7a, 0x08, 0xab, 0xa4, 0xf8, 0x90, 0x44, 0x82, 0x52, 0x4b, 0x94, 0x18, 0x92, 0xd8,
	0xc0, 0xee, 0x32, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x0d, 0x27, 0x2f, 0xd4, 0xb1, 0x00, 0x00,
	0x00,
}
